{"ast":null,"code":"var _jsxFileName = \"/Users/joelstraley/Documents/columbia/homework/Employee-Directory/src/pages/Search/index.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Container from \"../../components/Container\";\nimport SearchForm from \"../../components/SearchForm\";\nimport SearchResults from \"../../components/SearchResults\"; // When the component mounts, get a list of all available base breeds and update this.state.breeds\n\n/*  async componentDidMount() {\n     const url = \"https://api.randomuser.me/\";\n     const response = await fetch(url);\n     const data = await response.json();\n     this.setState({ employee: data.results[0]});\n     console.log(data.results[0]);\n } */\n\n/*   function Search() {\n    const [query, setSearch] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n  \n    useEffect(() => {\n      if (!query) {\n        return;\n      } if (query) { */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      image: \"\",\n      name: \"\",\n      address: \"\",\n      phone: \"\",\n      email: \"\",\n      results: [],\n      error: \"\"\n    };\n\n    this.andleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    API.search().then(res => this.setState({\n      name: res.results.name\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          minHeight: \"100vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Search For an Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n          handleInputChange: handleInputChange\n          /*  results={query} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SearchResults, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default Search;","map":{"version":3,"sources":["/Users/joelstraley/Documents/columbia/homework/Employee-Directory/src/pages/Search/index.js"],"names":["React","Component","API","Container","SearchForm","SearchResults","Search","state","search","image","name","address","phone","email","results","error","andleInputChange","event","setState","target","value","componentDidMount","then","res","catch","err","console","log","render","minHeight","handleInputChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B,C,CAGE;;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BM,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,OAAO,EAAE,EAJH;AAKNC,MAAAA,KAAK,EAAE,EALD;AAMNC,MAAAA,KAAK,EAAE,EAND;AAONC,MAAAA,OAAO,EAAE,EAPH;AAQNC,MAAAA,KAAK,EAAE;AARD,KADqB;;AAAA,SAmB7BC,gBAnB6B,GAmBVC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAEV,QAAAA,MAAM,EAAES,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACD,KArBwB;AAAA;;AAY7BC,EAAAA,iBAAiB,GAAG;AACdnB,IAAAA,GAAG,CAACM,MAAJ,GACGc,IADH,CACQC,GAAG,IAAI,KAAKL,QAAL,CAAc;AAAER,MAAAA,IAAI,EAAEa,GAAG,CAACT,OAAJ,CAAYJ;AAApB,KAAd,CADf,EAEGc,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD;;AAOLG,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAlB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI,QAAC,UAAD;AACC,UAAA,iBAAiB,EAAEC;AACrB;;AAFC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAME,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AApC4B;;AAqC9B;AAEC,eAAexB,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Container from \"../../components/Container\";\nimport SearchForm from \"../../components/SearchForm\";\nimport SearchResults from \"../../components/SearchResults\";\n\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n /*  async componentDidMount() {\n      const url = \"https://api.randomuser.me/\";\n      const response = await fetch(url);\n      const data = await response.json();\n      this.setState({ employee: data.results[0]});\n      console.log(data.results[0]);\n  } */\n\n/*   function Search() {\n    const [query, setSearch] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n  \n    useEffect(() => {\n      if (!query) {\n        return;\n      } if (query) { */\n\nclass Search extends Component {\n  state = {\n    search: \"\", \n    image: \"\",\n    name: \"\",\n    address: \"\",\n    phone: \"\",\n    email: \"\",\n    results: [],\n    error: \"\" \n  }\n\n  componentDidMount() {\n        API.search()\n          .then(res => this.setState({ name: res.results.name }))\n          .catch(err => console.log(err));\n      }\n          \n  \n  andleInputChange = event => {\n        this.setState({ search: event.target.value });\n      };\n\n  render(){\n    return (\n      <div>\n        <Container style={{ minHeight: \"100vh\" }}>\n          <h1 className=\"text-center\">Search For an Employee</h1>\n          { <SearchForm\n             handleInputChange={handleInputChange} \n           /*  results={query} */\n          />  }\n          <SearchResults />\n        </Container>\n      </div>\n    );\n  }\n};\n\n  export default Search;\n\n"]},"metadata":{},"sourceType":"module"}