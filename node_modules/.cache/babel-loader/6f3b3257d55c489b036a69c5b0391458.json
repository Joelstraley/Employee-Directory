{"ast":null,"code":"var _jsxFileName = \"/Users/joelstraley/Documents/columbia/homework/Employee-Directory/src/pages/Search/index.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Container from \"../../components/Container\";\nimport SearchForm from \"../../components/SearchForm\";\nimport SearchResults from \"../../components/SearchResults\";\nimport Alert from \"../../components/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      employee: \"\",\n      results: [],\n      error: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      API.search(this.state.search).then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n\n        this.setState({\n          results: res.data.message,\n          error: \"\"\n        });\n      }).catch(err => this.setState({\n        error: err.message\n      }));\n    };\n  }\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n\n  /*  async componentDidMount() {\n       const url = \"https://api.randomuser.me/\";\n       const response = await fetch(url);\n       const data = await response.json();\n       this.setState({ employee: data.results[0]});\n       console.log(data.results[0]);\n   } */\n  componentDidMount() {\n    API.search().then(res => this.setState({\n      employees: res.data.message\n    }));\n    console.log(res).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.employee.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.employee.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.employee.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.employee.picture,\n        alt: \"employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\nexport default Search;","map":{"version":3,"sources":["/Users/joelstraley/Documents/columbia/homework/Employee-Directory/src/pages/Search/index.js"],"names":["React","Component","API","Container","SearchForm","SearchResults","Alert","Search","state","search","employee","results","error","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","then","res","data","status","Error","message","catch","err","componentDidMount","employees","console","log","render","title","name","picture"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BO,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,KAAK,EAAE;AAJD,KADqB;;AAAA,SAuB5BC,iBAvB4B,GAuBRC,KAAK,IAAI;AAC5B,WAAKC,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACD,KAzB4B;;AAAA,SA2B7BC,gBA3B6B,GA2BVJ,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;AACAjB,MAAAA,GAAG,CAACO,MAAJ,CAAW,KAAKD,KAAL,CAAWC,MAAtB,EACGW,IADH,CACQC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,OAAxB,EAAiC;AAC/B,gBAAM,IAAIC,KAAJ,CAAUH,GAAG,CAACC,IAAJ,CAASG,OAAnB,CAAN;AACD;;AACD,aAAKV,QAAL,CAAc;AAAEJ,UAAAA,OAAO,EAAEU,GAAG,CAACC,IAAJ,CAASG,OAApB;AAA6Bb,UAAAA,KAAK,EAAE;AAApC,SAAd;AACD,OANH,EAOGc,KAPH,CAOSC,GAAG,IAAI,KAAKZ,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEe,GAAG,CAACF;AAAb,OAAd,CAPhB;AAQD,KArC4B;AAAA;;AAQ7B;;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACEG,EAAAA,iBAAiB,GAAI;AACnB1B,IAAAA,GAAG,CAACO,MAAJ,GACGW,IADH,CACQC,GAAG,IAAI,KAAKN,QAAL,CAAc;AAAEc,MAAAA,SAAS,EAAER,GAAG,CAACC,IAAJ,CAASG;AAAtB,KAAd,CADf;AAEEK,IAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ,EACCK,KADD,CACOC,GAAG,IAAIG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CADd;AAEH;;AAkBDK,EAAAA,MAAM,GAAG;AACP,wBACI;AAAA,8BACE;AAAA,kBAAM,KAAKxB,KAAL,CAAWE,QAAX,CAAoBuB;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAM,KAAKzB,KAAL,CAAWE,QAAX,CAAoBwB;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAM,KAAK1B,KAAL,CAAWE,QAAX,CAAoBwB;AAA1B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,GAAG,EAAE,KAAK1B,KAAL,CAAWE,QAAX,CAAoByB,OAA9B;AAAuC,QAAA,GAAG,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQD;;AAhD4B;;AAiD9B;AAED,eAAe5B,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Container from \"../../components/Container\";\nimport SearchForm from \"../../components/SearchForm\";\nimport SearchResults from \"../../components/SearchResults\";\nimport Alert from \"../../components/Alert\";\n\nclass Search extends Component {\n  state = {\n    search: \"\", \n    employee: \"\",\n    results: [],\n    error: \"\" \n  };\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n /*  async componentDidMount() {\n      const url = \"https://api.randomuser.me/\";\n      const response = await fetch(url);\n      const data = await response.json();\n      this.setState({ employee: data.results[0]});\n      console.log(data.results[0]);\n  } */\n  componentDidMount () {\n    API.search()\n      .then(res => this.setState({ employees: res.data.message }))\n      console.log(res)\n      .catch(err => console.log(err)); \n  }\n\n   handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.search(this.state.search)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        this.setState({ results: res.data.message, error: \"\" });\n      })\n      .catch(err => this.setState({ error: err.message }));\n  };   \n \n  render() {\n    return (\n        <div>\n          <div>{this.state.employee.title}</div>\n          <div>{this.state.employee.name}</div>\n          <div>{this.state.employee.name}</div>\n          <img src={this.state.employee.picture} alt=\"employee\"/>\n        </div>  \n    );\n  };\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}