{"ast":null,"code":"var _jsxFileName = \"/Users/joelstraley/Documents/columbia/homework/Employee-Directory/src/pages/Search/index.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Container from \"../../components/Container\";\nimport SearchForm from \"../../components/SearchForm\";\nimport SearchResults from \"../../components/SearchResults\";\nimport Alert from \"../../components/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      /*  search: \"\", */\n      employee: \"\"\n      /*   results: [],\n        error: \"\" */\n\n    };\n  }\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  async componentDidMount() {\n    const url = \"https://api.randomuser.me/\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      employee: data.results[0]\n    });\n    console.log(data.results[0]);\n  }\n  /*  API.populate()\n        .then(res => this.setState({ employees: res.data.message }))\n        console.log(res)\n        .catch(err => console.log(err)); \n    }\n  \n     handleInputChange = event => {\n      this.setState({ search: event.target.value });\n    };\n  \n    handleFormSubmit = event => {\n      event.preventDefault();\n      API.search(this.state.search)\n        .then(res => {\n          if (res.data.status === \"error\") {\n            throw new Error(res.data.message);\n          }\n          this.setState({ results: res.data.message, error: \"\" });\n        })\n        .catch(err => this.setState({ error: err.message }));\n    };   */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.employee.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.employee.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.employee.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.employee.picture,\n        alt: \"employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\nexport default Search;","map":{"version":3,"sources":["/Users/joelstraley/Documents/columbia/homework/Employee-Directory/src/pages/Search/index.js"],"names":["React","Component","API","Container","SearchForm","SearchResults","Alert","Search","state","employee","componentDidMount","url","response","fetch","data","json","setState","results","console","log","render","title","name","picture"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BO,KAD6B,GACrB;AACP;AACCC,MAAAA,QAAQ,EAAE;AACZ;AACF;;AAJU,KADqB;AAAA;;AAQ7B;AACuB,QAAjBC,iBAAiB,GAAG;AACtB,UAAMC,GAAG,GAAG,4BAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,QAAQ,EAAEK,IAAI,CAACG,OAAL,CAAa,CAAb;AAAZ,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACG,OAAL,CAAa,CAAb,CAAZ;AACH;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEG,EAAAA,MAAM,GAAG;AACP,wBACI;AAAA,8BACE;AAAA,kBAAM,KAAKZ,KAAL,CAAWC,QAAX,CAAoBY;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAM,KAAKb,KAAL,CAAWC,QAAX,CAAoBa;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAM,KAAKd,KAAL,CAAWC,QAAX,CAAoBa;AAA1B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,GAAG,EAAE,KAAKd,KAAL,CAAWC,QAAX,CAAoBc,OAA9B;AAAuC,QAAA,GAAG,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQD;;AAhD4B;;AAiD9B;AAED,eAAehB,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Container from \"../../components/Container\";\nimport SearchForm from \"../../components/SearchForm\";\nimport SearchResults from \"../../components/SearchResults\";\nimport Alert from \"../../components/Alert\";\n\nclass Search extends Component {\n  state = {\n   /*  search: \"\", */\n    employee: \"\",\n  /*   results: [],\n    error: \"\" */\n  };\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  async componentDidMount() {\n      const url = \"https://api.randomuser.me/\";\n      const response = await fetch(url);\n      const data = await response.json();\n      this.setState({ employee: data.results[0]});\n      console.log(data.results[0]);\n  }\n\n/*  API.populate()\n      .then(res => this.setState({ employees: res.data.message }))\n      console.log(res)\n      .catch(err => console.log(err)); \n  }\n\n   handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.search(this.state.search)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        this.setState({ results: res.data.message, error: \"\" });\n      })\n      .catch(err => this.setState({ error: err.message }));\n  };   */\n\n  render() {\n    return (\n        <div>\n          <div>{this.state.employee.title}</div>\n          <div>{this.state.employee.name}</div>\n          <div>{this.state.employee.name}</div>\n          <img src={this.state.employee.picture} alt=\"employee\"/>\n        </div>  \n    );\n  };\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}